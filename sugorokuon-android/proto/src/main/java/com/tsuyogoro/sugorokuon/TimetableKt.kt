// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tsuyogoro/sugorokuon/Timetable.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.tsuyogoro.sugorokuon;

@kotlin.jvm.JvmName("-initializetimetable")
public inline fun timetable(block: com.tsuyogoro.sugorokuon.TimetableKt.Dsl.() -> kotlin.Unit): com.tsuyogoro.sugorokuon.Timetable =
  com.tsuyogoro.sugorokuon.TimetableKt.Dsl._create(com.tsuyogoro.sugorokuon.Timetable.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `tsuyogoro.sugorokuon.Timetable`
 */
public object TimetableKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.tsuyogoro.sugorokuon.Timetable.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.tsuyogoro.sugorokuon.Timetable.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.tsuyogoro.sugorokuon.Timetable = _builder.build()

    /**
     * `.google.type.DateTime date = 1 [json_name = "date"];`
     */
    public var date: com.google.type.DateTime
      @JvmName("getDate")
      get() = _builder.date
      @JvmName("setDate")
      set(value) {
        _builder.date = value
      }
    /**
     * `.google.type.DateTime date = 1 [json_name = "date"];`
     */
    public fun clearDate() {
      _builder.clearDate()
    }
    /**
     * `.google.type.DateTime date = 1 [json_name = "date"];`
     * @return Whether the date field is set.
     */
    public fun hasDate(): kotlin.Boolean {
      return _builder.hasDate()
    }

    public val TimetableKt.Dsl.dateOrNull: com.google.type.DateTime?
      get() = _builder.dateOrNull

    /**
     * `.tsuyogoro.sugorokuon.Station station = 2 [json_name = "station"];`
     */
    public var station: com.tsuyogoro.sugorokuon.Station
      @JvmName("getStation")
      get() = _builder.station
      @JvmName("setStation")
      set(value) {
        _builder.station = value
      }
    /**
     * `.tsuyogoro.sugorokuon.Station station = 2 [json_name = "station"];`
     */
    public fun clearStation() {
      _builder.clearStation()
    }
    /**
     * `.tsuyogoro.sugorokuon.Station station = 2 [json_name = "station"];`
     * @return Whether the station field is set.
     */
    public fun hasStation(): kotlin.Boolean {
      return _builder.hasStation()
    }

    public val TimetableKt.Dsl.stationOrNull: com.tsuyogoro.sugorokuon.Station?
      get() = _builder.stationOrNull

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class ProgramsProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .tsuyogoro.sugorokuon.Program programs = 3 [json_name = "programs"];`
     */
     public val programs: com.google.protobuf.kotlin.DslList<com.tsuyogoro.sugorokuon.Program, ProgramsProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.programsList
      )
    /**
     * `repeated .tsuyogoro.sugorokuon.Program programs = 3 [json_name = "programs"];`
     * @param value The programs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addPrograms")
    public fun com.google.protobuf.kotlin.DslList<com.tsuyogoro.sugorokuon.Program, ProgramsProxy>.add(value: com.tsuyogoro.sugorokuon.Program) {
      _builder.addPrograms(value)
    }
    /**
     * `repeated .tsuyogoro.sugorokuon.Program programs = 3 [json_name = "programs"];`
     * @param value The programs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignPrograms")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.tsuyogoro.sugorokuon.Program, ProgramsProxy>.plusAssign(value: com.tsuyogoro.sugorokuon.Program) {
      add(value)
    }
    /**
     * `repeated .tsuyogoro.sugorokuon.Program programs = 3 [json_name = "programs"];`
     * @param values The programs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllPrograms")
    public fun com.google.protobuf.kotlin.DslList<com.tsuyogoro.sugorokuon.Program, ProgramsProxy>.addAll(values: kotlin.collections.Iterable<com.tsuyogoro.sugorokuon.Program>) {
      _builder.addAllPrograms(values)
    }
    /**
     * `repeated .tsuyogoro.sugorokuon.Program programs = 3 [json_name = "programs"];`
     * @param values The programs to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllPrograms")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.tsuyogoro.sugorokuon.Program, ProgramsProxy>.plusAssign(values: kotlin.collections.Iterable<com.tsuyogoro.sugorokuon.Program>) {
      addAll(values)
    }
    /**
     * `repeated .tsuyogoro.sugorokuon.Program programs = 3 [json_name = "programs"];`
     * @param index The index to set the value at.
     * @param value The programs to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setPrograms")
    public operator fun com.google.protobuf.kotlin.DslList<com.tsuyogoro.sugorokuon.Program, ProgramsProxy>.set(index: kotlin.Int, value: com.tsuyogoro.sugorokuon.Program) {
      _builder.setPrograms(index, value)
    }
    /**
     * `repeated .tsuyogoro.sugorokuon.Program programs = 3 [json_name = "programs"];`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearPrograms")
    public fun com.google.protobuf.kotlin.DslList<com.tsuyogoro.sugorokuon.Program, ProgramsProxy>.clear() {
      _builder.clearPrograms()
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.tsuyogoro.sugorokuon.Timetable.copy(block: `com.tsuyogoro.sugorokuon`.TimetableKt.Dsl.() -> kotlin.Unit): com.tsuyogoro.sugorokuon.Timetable =
  `com.tsuyogoro.sugorokuon`.TimetableKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.tsuyogoro.sugorokuon.TimetableOrBuilder.dateOrNull: com.google.type.DateTime?
  get() = if (hasDate()) getDate() else null

public val com.tsuyogoro.sugorokuon.TimetableOrBuilder.stationOrNull: com.tsuyogoro.sugorokuon.Station?
  get() = if (hasStation()) getStation() else null

