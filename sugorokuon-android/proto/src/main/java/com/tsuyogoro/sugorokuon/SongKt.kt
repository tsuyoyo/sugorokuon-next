// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: tsuyogoro/sugorokuon/Song.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.tsuyogoro.sugorokuon;

@kotlin.jvm.JvmName("-initializesong")
public inline fun song(block: com.tsuyogoro.sugorokuon.SongKt.Dsl.() -> kotlin.Unit): com.tsuyogoro.sugorokuon.Song =
  com.tsuyogoro.sugorokuon.SongKt.Dsl._create(com.tsuyogoro.sugorokuon.Song.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `tsuyogoro.sugorokuon.Song`
 */
public object SongKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.tsuyogoro.sugorokuon.Song.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.tsuyogoro.sugorokuon.Song.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.tsuyogoro.sugorokuon.Song = _builder.build()

    /**
     * `.tsuyogoro.sugorokuon.Artist artist = 1 [json_name = "artist"];`
     */
    public var artist: com.tsuyogoro.sugorokuon.Artist
      @JvmName("getArtist")
      get() = _builder.artist
      @JvmName("setArtist")
      set(value) {
        _builder.artist = value
      }
    /**
     * `.tsuyogoro.sugorokuon.Artist artist = 1 [json_name = "artist"];`
     */
    public fun clearArtist() {
      _builder.clearArtist()
    }
    /**
     * `.tsuyogoro.sugorokuon.Artist artist = 1 [json_name = "artist"];`
     * @return Whether the artist field is set.
     */
    public fun hasArtist(): kotlin.Boolean {
      return _builder.hasArtist()
    }

    public val SongKt.Dsl.artistOrNull: com.tsuyogoro.sugorokuon.Artist?
      get() = _builder.artistOrNull

    /**
     * `string title = 2 [json_name = "title"];`
     */
    public var title: kotlin.String
      @JvmName("getTitle")
      get() = _builder.title
      @JvmName("setTitle")
      set(value) {
        _builder.title = value
      }
    /**
     * `string title = 2 [json_name = "title"];`
     */
    public fun clearTitle() {
      _builder.clearTitle()
    }

    /**
     * `.tsuyogoro.sugorokuon.SongThumbnail thumbnails = 3 [json_name = "thumbnails"];`
     */
    public var thumbnails: com.tsuyogoro.sugorokuon.SongThumbnail
      @JvmName("getThumbnails")
      get() = _builder.thumbnails
      @JvmName("setThumbnails")
      set(value) {
        _builder.thumbnails = value
      }
    /**
     * `.tsuyogoro.sugorokuon.SongThumbnail thumbnails = 3 [json_name = "thumbnails"];`
     */
    public fun clearThumbnails() {
      _builder.clearThumbnails()
    }
    /**
     * `.tsuyogoro.sugorokuon.SongThumbnail thumbnails = 3 [json_name = "thumbnails"];`
     * @return Whether the thumbnails field is set.
     */
    public fun hasThumbnails(): kotlin.Boolean {
      return _builder.hasThumbnails()
    }

    public val SongKt.Dsl.thumbnailsOrNull: com.tsuyogoro.sugorokuon.SongThumbnail?
      get() = _builder.thumbnailsOrNull

    /**
     * `.google.type.DateTime onAirTime = 4 [json_name = "onAirTime"];`
     */
    public var onAirTime: com.google.type.DateTime
      @JvmName("getOnAirTime")
      get() = _builder.onAirTime
      @JvmName("setOnAirTime")
      set(value) {
        _builder.onAirTime = value
      }
    /**
     * `.google.type.DateTime onAirTime = 4 [json_name = "onAirTime"];`
     */
    public fun clearOnAirTime() {
      _builder.clearOnAirTime()
    }
    /**
     * `.google.type.DateTime onAirTime = 4 [json_name = "onAirTime"];`
     * @return Whether the onAirTime field is set.
     */
    public fun hasOnAirTime(): kotlin.Boolean {
      return _builder.hasOnAirTime()
    }

    public val SongKt.Dsl.onAirTimeOrNull: com.google.type.DateTime?
      get() = _builder.onAirTimeOrNull
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.tsuyogoro.sugorokuon.Song.copy(block: `com.tsuyogoro.sugorokuon`.SongKt.Dsl.() -> kotlin.Unit): com.tsuyogoro.sugorokuon.Song =
  `com.tsuyogoro.sugorokuon`.SongKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val com.tsuyogoro.sugorokuon.SongOrBuilder.artistOrNull: com.tsuyogoro.sugorokuon.Artist?
  get() = if (hasArtist()) getArtist() else null

public val com.tsuyogoro.sugorokuon.SongOrBuilder.thumbnailsOrNull: com.tsuyogoro.sugorokuon.SongThumbnail?
  get() = if (hasThumbnails()) getThumbnails() else null

public val com.tsuyogoro.sugorokuon.SongOrBuilder.onAirTimeOrNull: com.google.type.DateTime?
  get() = if (hasOnAirTime()) getOnAirTime() else null

