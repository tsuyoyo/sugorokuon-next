// Generated by the protocol buffer compiler. DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google/type/datetime.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package com.google.type;

@kotlin.jvm.JvmName("-initializetimeZone")
public inline fun timeZone(block: com.google.type.TimeZoneKt.Dsl.() -> kotlin.Unit): com.google.type.TimeZone =
  com.google.type.TimeZoneKt.Dsl._create(com.google.type.TimeZone.newBuilder()).apply { block() }._build()
/**
 * ```
 * Represents a time zone from the
 * [IANA Time Zone Database](https://www.iana.org/time-zones).
 * ```
 *
 * Protobuf type `google.type.TimeZone`
 */
public object TimeZoneKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.google.type.TimeZone.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
      internal fun _create(builder: com.google.type.TimeZone.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
  @kotlin.PublishedApi
    internal fun _build(): com.google.type.TimeZone = _builder.build()

    /**
     * ```
     * IANA Time Zone Database time zone, e.g. "America/New_York".
     * ```
     *
     * `string id = 1 [json_name = "id"];`
     */
    public var id: kotlin.String
      @JvmName("getId")
      get() = _builder.id
      @JvmName("setId")
      set(value) {
        _builder.id = value
      }
    /**
     * ```
     * IANA Time Zone Database time zone, e.g. "America/New_York".
     * ```
     *
     * `string id = 1 [json_name = "id"];`
     */
    public fun clearId() {
      _builder.clearId()
    }

    /**
     * ```
     * Optional. IANA Time Zone Database version number, e.g. "2019a".
     * ```
     *
     * `string version = 2 [json_name = "version"];`
     */
    public var version: kotlin.String
      @JvmName("getVersion")
      get() = _builder.version
      @JvmName("setVersion")
      set(value) {
        _builder.version = value
      }
    /**
     * ```
     * Optional. IANA Time Zone Database version number, e.g. "2019a".
     * ```
     *
     * `string version = 2 [json_name = "version"];`
     */
    public fun clearVersion() {
      _builder.clearVersion()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.google.type.TimeZone.copy(block: `com.google.type`.TimeZoneKt.Dsl.() -> kotlin.Unit): com.google.type.TimeZone =
  `com.google.type`.TimeZoneKt.Dsl._create(this.toBuilder()).apply { block() }._build()

