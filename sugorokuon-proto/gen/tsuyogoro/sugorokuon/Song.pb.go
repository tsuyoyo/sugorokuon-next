// "artist_name": "RADIO FISH",
// "displayed_start_time": "2024-12-30T16:10:23+09:00",
// "id": "2024-12-30T16:10:23-BAYFM78",
// "music": {
//   "image": {
//     "large": "https://m.media-amazon.com/images/I/51vJoXLBy0L._SL500_.jpg",
//     "medium": "https://m.media-amazon.com/images/I/51vJoXLBy0L._SL160_.jpg",
//     "small": "https://m.media-amazon.com/images/I/51vJoXLBy0L._SL75_.jpg"
//   },
//   "shops": {
//     "amazon": "https://www.amazon.co.jp/dp/B01CUDKZWM?tag=radiko-22&linkCode=osi&th=1&psc=1",
//     "itunes": "https://music.apple.com/jp/album/perfect-human/1068345391?i=1068345393&uo=4&at=1014xm&apo=itunes",
//     "recochoku": "https://recochoku.jp/song/S1002580717/?affiliate=6501010009"
//   }
// },
// "title": "PERFECT HUMAN"

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        (unknown)
// source: tsuyogoro/sugorokuon/Song.proto

package sugorokuon

import (
	_type "github.com/bufbuild/buf-tour/gen/google/type"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SongThumbnail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Small         string                 `protobuf:"bytes,1,opt,name=small,proto3" json:"small,omitempty"`
	Medium        string                 `protobuf:"bytes,2,opt,name=medium,proto3" json:"medium,omitempty"`
	Large         string                 `protobuf:"bytes,3,opt,name=large,proto3" json:"large,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SongThumbnail) Reset() {
	*x = SongThumbnail{}
	mi := &file_tsuyogoro_sugorokuon_Song_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SongThumbnail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SongThumbnail) ProtoMessage() {}

func (x *SongThumbnail) ProtoReflect() protoreflect.Message {
	mi := &file_tsuyogoro_sugorokuon_Song_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SongThumbnail.ProtoReflect.Descriptor instead.
func (*SongThumbnail) Descriptor() ([]byte, []int) {
	return file_tsuyogoro_sugorokuon_Song_proto_rawDescGZIP(), []int{0}
}

func (x *SongThumbnail) GetSmall() string {
	if x != nil {
		return x.Small
	}
	return ""
}

func (x *SongThumbnail) GetMedium() string {
	if x != nil {
		return x.Medium
	}
	return ""
}

func (x *SongThumbnail) GetLarge() string {
	if x != nil {
		return x.Large
	}
	return ""
}

type Song struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Artist        *Artist                `protobuf:"bytes,1,opt,name=artist,proto3" json:"artist,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Thumbnails    *SongThumbnail         `protobuf:"bytes,3,opt,name=thumbnails,proto3" json:"thumbnails,omitempty"`
	OnAirTime     *_type.DateTime        `protobuf:"bytes,4,opt,name=onAirTime,proto3" json:"onAirTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Song) Reset() {
	*x = Song{}
	mi := &file_tsuyogoro_sugorokuon_Song_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Song) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Song) ProtoMessage() {}

func (x *Song) ProtoReflect() protoreflect.Message {
	mi := &file_tsuyogoro_sugorokuon_Song_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Song.ProtoReflect.Descriptor instead.
func (*Song) Descriptor() ([]byte, []int) {
	return file_tsuyogoro_sugorokuon_Song_proto_rawDescGZIP(), []int{1}
}

func (x *Song) GetArtist() *Artist {
	if x != nil {
		return x.Artist
	}
	return nil
}

func (x *Song) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Song) GetThumbnails() *SongThumbnail {
	if x != nil {
		return x.Thumbnails
	}
	return nil
}

func (x *Song) GetOnAirTime() *_type.DateTime {
	if x != nil {
		return x.OnAirTime
	}
	return nil
}

var File_tsuyogoro_sugorokuon_Song_proto protoreflect.FileDescriptor

var file_tsuyogoro_sugorokuon_Song_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x74, 0x73, 0x75, 0x79, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x2f, 0x73, 0x75, 0x67, 0x6f,
	0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0x2f, 0x53, 0x6f, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x14, 0x74, 0x73, 0x75, 0x79, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x2e, 0x73, 0x75, 0x67,
	0x6f, 0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x74, 0x79, 0x70, 0x65, 0x2f, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x74, 0x73, 0x75, 0x79, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x2f, 0x73,
	0x75, 0x67, 0x6f, 0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0x2f, 0x41, 0x72, 0x74, 0x69, 0x73, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a, 0x0d, 0x53, 0x6f, 0x6e, 0x67, 0x54, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x64, 0x69, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x04,
	0x53, 0x6f, 0x6e, 0x67, 0x12, 0x34, 0x0a, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x73, 0x75, 0x79, 0x6f, 0x67, 0x6f, 0x72, 0x6f,
	0x2e, 0x73, 0x75, 0x67, 0x6f, 0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x73, 0x74, 0x52, 0x06, 0x61, 0x72, 0x74, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x43, 0x0a, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x74, 0x73, 0x75, 0x79, 0x6f, 0x67, 0x6f, 0x72, 0x6f,
	0x2e, 0x73, 0x75, 0x67, 0x6f, 0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x6e, 0x67,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x74, 0x68, 0x75, 0x6d, 0x62,
	0x6e, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x6f, 0x6e, 0x41, 0x69, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x52,
	0x09, 0x6f, 0x6e, 0x41, 0x69, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x42, 0xcd, 0x01, 0x0a, 0x18, 0x63,
	0x6f, 0x6d, 0x2e, 0x74, 0x73, 0x75, 0x79, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x2e, 0x73, 0x75, 0x67,
	0x6f, 0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0x42, 0x09, 0x53, 0x6f, 0x6e, 0x67, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x75, 0x66, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2f, 0x62, 0x75, 0x66, 0x2d, 0x74, 0x6f,
	0x75, 0x72, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x74, 0x73, 0x75, 0x79, 0x6f, 0x67, 0x6f, 0x72, 0x6f,
	0x2f, 0x73, 0x75, 0x67, 0x6f, 0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0xa2, 0x02, 0x03, 0x54, 0x53,
	0x58, 0xaa, 0x02, 0x14, 0x54, 0x73, 0x75, 0x79, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x2e, 0x53, 0x75,
	0x67, 0x6f, 0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0xca, 0x02, 0x14, 0x54, 0x73, 0x75, 0x79, 0x6f,
	0x67, 0x6f, 0x72, 0x6f, 0x5c, 0x53, 0x75, 0x67, 0x6f, 0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0xe2,
	0x02, 0x20, 0x54, 0x73, 0x75, 0x79, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x5c, 0x53, 0x75, 0x67, 0x6f,
	0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0xea, 0x02, 0x15, 0x54, 0x73, 0x75, 0x79, 0x6f, 0x67, 0x6f, 0x72, 0x6f, 0x3a, 0x3a,
	0x53, 0x75, 0x67, 0x6f, 0x72, 0x6f, 0x6b, 0x75, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_tsuyogoro_sugorokuon_Song_proto_rawDescOnce sync.Once
	file_tsuyogoro_sugorokuon_Song_proto_rawDescData = file_tsuyogoro_sugorokuon_Song_proto_rawDesc
)

func file_tsuyogoro_sugorokuon_Song_proto_rawDescGZIP() []byte {
	file_tsuyogoro_sugorokuon_Song_proto_rawDescOnce.Do(func() {
		file_tsuyogoro_sugorokuon_Song_proto_rawDescData = protoimpl.X.CompressGZIP(file_tsuyogoro_sugorokuon_Song_proto_rawDescData)
	})
	return file_tsuyogoro_sugorokuon_Song_proto_rawDescData
}

var file_tsuyogoro_sugorokuon_Song_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_tsuyogoro_sugorokuon_Song_proto_goTypes = []any{
	(*SongThumbnail)(nil),  // 0: tsuyogoro.sugorokuon.SongThumbnail
	(*Song)(nil),           // 1: tsuyogoro.sugorokuon.Song
	(*Artist)(nil),         // 2: tsuyogoro.sugorokuon.Artist
	(*_type.DateTime)(nil), // 3: google.type.DateTime
}
var file_tsuyogoro_sugorokuon_Song_proto_depIdxs = []int32{
	2, // 0: tsuyogoro.sugorokuon.Song.artist:type_name -> tsuyogoro.sugorokuon.Artist
	0, // 1: tsuyogoro.sugorokuon.Song.thumbnails:type_name -> tsuyogoro.sugorokuon.SongThumbnail
	3, // 2: tsuyogoro.sugorokuon.Song.onAirTime:type_name -> google.type.DateTime
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_tsuyogoro_sugorokuon_Song_proto_init() }
func file_tsuyogoro_sugorokuon_Song_proto_init() {
	if File_tsuyogoro_sugorokuon_Song_proto != nil {
		return
	}
	file_tsuyogoro_sugorokuon_Artist_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tsuyogoro_sugorokuon_Song_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tsuyogoro_sugorokuon_Song_proto_goTypes,
		DependencyIndexes: file_tsuyogoro_sugorokuon_Song_proto_depIdxs,
		MessageInfos:      file_tsuyogoro_sugorokuon_Song_proto_msgTypes,
	}.Build()
	File_tsuyogoro_sugorokuon_Song_proto = out.File
	file_tsuyogoro_sugorokuon_Song_proto_rawDesc = nil
	file_tsuyogoro_sugorokuon_Song_proto_goTypes = nil
	file_tsuyogoro_sugorokuon_Song_proto_depIdxs = nil
}
